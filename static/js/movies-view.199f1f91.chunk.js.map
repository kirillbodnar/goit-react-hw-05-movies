{"version":3,"file":"static/js/movies-view.199f1f91.chunk.js","mappings":"4LACA,EAAuB,wBAAvB,EAAuD,yB,SCGxC,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CACEH,UAAWC,EACXG,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CACLC,KACsB,KAApBT,EAASU,OAAT,UACOV,EAASW,UADhB,UAEOX,EAASW,UAFhB,OAE2BX,EAASU,SAP1C,SAUGL,EAAMO,OAASP,EAAMQ,QAXjBR,EAAME,a,oDCX3B,MAA4B,2B,SCEb,SAASO,EAAT,GAAuC,IAApBF,EAAmB,EAAnBA,MAAOG,EAAY,EAAZA,SACvC,OACE,qBAASb,UAAWC,EAApB,UACGS,IAAS,wBAAKA,IACdG,O,2HCNP,EAAuB,wBAAvB,EAAwD,0BAAxD,EAA0F,yBAA1F,EAA2H,yB,SCI5G,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClC,GAA0BC,EAAAA,EAAAA,WAAS,WACjC,OAAID,GAGG,MAJT,eAAOE,EAAP,KAAcC,EAAd,KAMMC,GAAWC,EAAAA,EAAAA,MACXC,EAAWJ,EAAMK,OAAOC,MAAM,KAAKC,KAAK,KAU9C,OACE,kBAAMxB,UAAWC,EAAQwB,SALN,SAAAC,GACnBA,EAAEC,iBACFR,EAAS,iBAAD,OAAkBE,KAG1B,WACE,kBACErB,UAAWC,EACX2B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOd,EACPe,YAAY,eACZC,SAjBe,SAAAP,GACnBR,EAASQ,EAAEQ,cAAcH,WAkBvB,oBAAQ/B,UAAWC,EAAU2B,KAAK,SAAlC,WACE,SAAC,MAAD,KACA,iBAAM5B,UAAWC,EAAjB,0B,sBC5BO,SAASkC,IACtB,OAA4BnB,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeuC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAQuB,EAAaE,IAAI,SAc/B,OAZAC,EAAAA,EAAAA,YAAU,WACM,OAAV1B,IAGJ2B,EAAAA,EAAAA,IAAY3B,GACT4B,MAAK,SAAAC,GACJR,EAAUQ,EAAIC,SACdN,EAAgB,CAAExB,MAAOA,OAE1B+B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACR,EAAiBxB,KAGnB,+BACE,UAACH,EAAA,EAAD,YACE,SAACE,EAAD,CAAWC,MAAOA,IACC,IAAlBlB,EAAOqD,SAAgB,SAACtD,EAAA,EAAD,CAAWC,OAAQA","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","views/MoviesView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MovieList_List__Qi16k\",\"Movie\":\"MovieList_Movie__a7Eja\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './MovieList.module.css';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={s.List}>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link\n                className={s.Movie}\n                to={`/movies/${movie.id}`}\n                state={{\n                  from:\n                    location.search === ''\n                      ? `${location.pathname}`\n                      : `${location.pathname}${location.search}`,\n                }}\n              >\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Section_container__vEvWA\"};","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.container}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"button\":\"Searchbar_button__nkcjk\",\"label\":\"Searchbar_label__BRcTT\",\"input\":\"Searchbar_input__19umw\"};","import { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { useNavigate } from 'react-router-dom';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ query }) {\n  const [input, setInput] = useState(() => {\n    if (query) {\n      return query;\n    }\n    return '';\n  });\n  const navigate = useNavigate();\n  const inputURL = input.trim().split(' ').join('+');\n\n  const handleChange = e => {\n    setInput(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    navigate(`/movies?query=${inputURL}`);\n  };\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <input\n        className={s.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={input}\n        placeholder=\"Search movie\"\n        onChange={handleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        <ImSearch />\n        <span className={s.label}>Search</span>\n      </button>\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { fetchByName } from 'api/movies';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport Section from 'components/Section/Section';\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null || '') {\n      return;\n    }\n    fetchByName(query)\n      .then(res => {\n        setMovies(res.results);\n        setSearchParams({ query: query });\n      })\n      .catch(error => console.log(error));\n  }, [setSearchParams, query]);\n\n  return (\n    <>\n      <Section>\n        <Searchbar query={query} />\n        {movies.length !== 0 && <MovieList movies={movies} />}\n      </Section>\n    </>\n  );\n}\n"],"names":["MovieList","movies","location","useLocation","className","s","map","movie","to","id","state","from","search","pathname","title","name","Section","children","Searchbar","query","useState","input","setInput","navigate","useNavigate","inputURL","trim","split","join","onSubmit","e","preventDefault","type","autoComplete","autoFocus","value","placeholder","onChange","currentTarget","MoviesView","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchByName","then","res","results","catch","error","console","log","length"],"sourceRoot":""}